apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "registry.fullname" . }}
  labels:
    {{- include "registry.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.auth.enabled }}
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "registry.fullname" . }}-secret
                  key: httpSecret
          {{- end }}
          {{- if .Values.redis.enabled }}
            - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
              value: "redis"
            - name: REGISTRY_REDIS_ADDR
              value: "registry-redis-master:6379" 
            - name: REGISTRY_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redisPassword
          {{- end }}
          {{- if eq .Values.storage.type "s3" }}
            - name: REGISTRY_STORAGE
              value: s3
            - name: REGISTRY_STORAGE_S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "registry.fullname" . }}-secret
                  key: s3AccessKey
            - name: REGISTRY_STORAGE_S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "registry.fullname" . }}-secret
                  key: s3SecretKey
            - name: REGISTRY_STORAGE_S3_REGION
              value: {{ required "region should be defined" .Values.storage.s3.region }}
            - name: REGISTRY_STORAGE_S3_BUCKET
              value: {{ required "bucket name should be defined" .Values.storage.s3.bucketName }}
            {{- end }}
          volumeMounts:
          {{- if .Values.auth.enabled }}
            - name: auth
              mountPath: /auth
              readOnly: true
          {{- end }}
          {{- if eq .Values.storage.type "filesystem" }}
            - name: pv-storage
              mountPath: "/var/lib/registry"
          {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.auth.enabled }}
        - name: auth
          secret:
            secretName: {{ include "registry.fullname" . }}-secret
            items:
            - key: htpasswd
              path: htpasswd
        {{- end }}
        {{- if eq .Values.storage.type "filesystem" }}
        - name: pv-storage
          persistentVolumeClaim:
            claimName: {{ include "registry.fullname" . }}-pvc
        {{- end -}}